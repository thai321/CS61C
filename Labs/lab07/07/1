	.file	"sseTest.c"
	.section	.rodata
.LC5:
	.string	"|%g %g| * |%g %g| = |%g %g|\n"
.LC6:
	.string	"|%g %g|   |%g %g|   |%g %g|\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB493:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$432, %rsp
	movl	%edi, -420(%rbp)
	movq	%rsi, -432(%rbp)
	movabsq	$4607182418800017408, %rax
	movq	%rax, -416(%rbp)
	movabsq	$4611686018427387904, %rax
	movq	%rax, -408(%rbp)
	movabsq	$4613937818241073152, %rax
	movq	%rax, -400(%rbp)
	movabsq	$4616189618054758400, %rax
	movq	%rax, -392(%rbp)
	movabsq	$4613937818241073152, %rax
	movq	%rax, -384(%rbp)
	movl	$0, %eax
	movq	%rax, -376(%rbp)
	movl	$0, %eax
	movq	%rax, -368(%rbp)
	movabsq	$4611686018427387904, %rax
	movq	%rax, -360(%rbp)
	movl	$0, %eax
	movq	%rax, -352(%rbp)
	movl	$0, %eax
	movq	%rax, -344(%rbp)
	movl	$0, %eax
	movq	%rax, -336(%rbp)
	movl	$0, %eax
	movq	%rax, -328(%rbp)
	leaq	-352(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movupd	(%rax), %xmm0  % load c1
	movapd	%xmm0, -320(%rbp)
	leaq	-352(%rbp), %rax
	addq	$16, %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movupd	(%rax), %xmm0   %load c2
	movapd	%xmm0, -304(%rbp)
	movl	$0, -4(%rbp)
	jmp	.L2
.L3:
	movl	-4(%rbp), %eax
	cltq
	movq	%rax, %rdx
	salq	$4, %rdx
	leaq	-416(%rbp), %rax
	addq	%rdx, %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movupd	(%rax), %xmm0     %load a
	movapd	%xmm0, -288(%rbp)
	movl	-4(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	leaq	-384(%rbp), %rax
	addq	%rdx, %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movsd	-48(%rbp), %xmm0   %load b1
	unpcklpd	%xmm0, %xmm0
	movapd	%xmm0, -272(%rbp)
	movl	-4(%rbp), %eax
	cltq
	addq	$2, %rax
	leaq	0(,%rax,8), %rdx
	leaq	-384(%rbp), %rax
	addq	%rdx, %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
	movsd	-32(%rbp), %xmm0    %load b2
	unpcklpd	%xmm0, %xmm0
	movapd	%xmm0, -256(%rbp)
	movapd	-288(%rbp), %xmm0
	movapd	%xmm0, -240(%rbp)
	movapd	-272(%rbp), %xmm0
	movapd	%xmm0, -224(%rbp)
	movapd	-224(%rbp), %xmm0
	movapd	-240(%rbp), %xmm1
	mulpd	%xmm1, %xmm0
	movapd	-320(%rbp), %xmm1
	movapd	%xmm1, -208(%rbp)
	movapd	%xmm0, -192(%rbp)
	movapd	-192(%rbp), %xmm0
	movapd	-208(%rbp), %xmm1
	addpd	%xmm1, %xmm0		% add(a, b1)---> c1
	movapd	%xmm0, -320(%rbp)
	movapd	-288(%rbp), %xmm0
	movapd	%xmm0, -176(%rbp)
	movapd	-256(%rbp), %xmm0
	movapd	%xmm0, -160(%rbp)
	movapd	-160(%rbp), %xmm0
	movapd	-176(%rbp), %xmm1
	mulpd	%xmm1, %xmm0
	movapd	-304(%rbp), %xmm1
	movapd	%xmm1, -144(%rbp)
	movapd	%xmm0, -128(%rbp)
	movapd	-128(%rbp), %xmm0
	movapd	-144(%rbp), %xmm1
	addpd	%xmm1, %xmm0		% add(a, b2)---> c2
	movapd	%xmm0, -304(%rbp)
	addl	$1, -4(%rbp)
.L2:
	cmpl	$1, -4(%rbp)
	jle	.L3
	leaq	-352(%rbp), %rax
	movq	%rax, -24(%rbp)
	movapd	-320(%rbp), %xmm0
	movapd	%xmm0, -112(%rbp)
	movq	-24(%rbp), %rax
	movapd	-112(%rbp), %xmm0
	movupd	%xmm0, (%rax)		% store in c1
	leaq	-352(%rbp), %rax
	addq	$16, %rax
	movq	%rax, -16(%rbp)
	movapd	-304(%rbp), %xmm0
	movapd	%xmm0, -96(%rbp)
	movq	-16(%rbp), %rax
	movapd	-96(%rbp), %xmm0
	movupd	%xmm0, (%rax)		%store in c2
	movsd	-336(%rbp), %xmm5
	movsd	-352(%rbp), %xmm4
	movsd	-368(%rbp), %xmm3
	movsd	-384(%rbp), %xmm2
	movsd	-400(%rbp), %xmm1
	movsd	-416(%rbp), %xmm0
	movl	$.LC5, %eax
	movq	%rax, %rdi
	movl	$6, %eax
	call	printf
	movsd	-328(%rbp), %xmm5
	movsd	-344(%rbp), %xmm4
	movsd	-360(%rbp), %xmm3
	movsd	-376(%rbp), %xmm2
	movsd	-392(%rbp), %xmm1
	movsd	-408(%rbp), %xmm0
	movl	$.LC6, %eax
	movq	%rax, %rdi
	movl	$6, %eax
	call	printf
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE493:
	.size	main, .-main
	.ident	"GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3"
	.section	.note.GNU-stack,"",@progbits
